<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cimr.sysmanage.dao.RolePermissionDao">
    <!-- RolePermission的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_RolePermission_Map" type="com.cimr.sysmanage.model.RolePermission">
        <id column="id" property="id" />
        <result column="create_by" property="createBy" />
        <result column="del_flag" property="delFlag" />
        <result column="update_time" property="updateTime" />
        <result column="create_time" property="createTime" />
        <result column="role_id" property="roleId" />
        <result column="permission_id" property="permissionId" />
        <result column="update_by" property="updateBy" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:sys_role_permission的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="sys_role_permission_Column">
        sys_role_permission.id as id
        ,sys_role_permission.create_by as create_by
        ,sys_role_permission.del_flag as del_flag
        ,sys_role_permission.update_time as update_time
        ,sys_role_permission.create_time as create_time
        ,sys_role_permission.role_id as role_id
        ,sys_role_permission.permission_id as permission_id
        ,sys_role_permission.update_by as update_by
    </sql>

    <!--获得类名为:RolePermission对应的数据库表的数据总行数 -->
    <select id="getObjRowCount_common" parameterType="com.cimr.util.Assist" resultType="java.lang.Long">
        select count(id) from sys_role_permission
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:RolePermission对应数据库中表的数据集合 -->
    <select id="selectObj_common" parameterType="com.cimr.util.Assist"  resultMap="result_RolePermission_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="sys_role_permission_Column" /> 
            </otherwise>
        </choose>
        from sys_role_permission
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM sys_role_permission
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=sys_role_permission.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个RolePermission对象,以参数RolePermission对象中不为空的属性作为条件进行查询-->
    <select id="selectObjByObj_common" parameterType="com.cimr.sysmanage.model.RolePermission" resultMap="result_RolePermission_Map">
        select 
            <include refid="sys_role_permission_Column" /> 
        from sys_role_permission
        <where>
            <if test="updateBy != null "> and sys_role_permission.update_by = #{updateBy}</if>
            <if test="permissionId != null "> and sys_role_permission.permission_id = #{permissionId}</if>
            <if test="roleId != null "> and sys_role_permission.role_id = #{roleId}</if>
            <if test="createTime != null "> and sys_role_permission.create_time = #{createTime}</if>
            <if test="updateTime != null "> and sys_role_permission.update_time = #{updateTime}</if>
            <if test="delFlag != null "> and sys_role_permission.del_flag = #{delFlag}</if>
            <if test="createBy != null "> and sys_role_permission.create_by = #{createBy}</if>
            <if test="id != null "> and sys_role_permission.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过RolePermission的id获得对应数据库中表的数据对象-->
    <select id="selectObjById_common" parameterType="java.lang.String" resultMap="result_RolePermission_Map">
        select 
            <include refid="sys_role_permission_Column" /> 
        from sys_role_permission
        where sys_role_permission.id = #{id}
    </select> 

    <!-- 将RolePermission插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertObj_common" parameterType="com.cimr.sysmanage.model.RolePermission">
        insert into sys_role_permission(id,create_by,del_flag,update_time,create_time,role_id,permission_id,update_by) 
        values(#{id},#{createBy},#{delFlag},#{updateTime},#{createTime},#{roleId},#{permissionId},#{updateBy})
    </insert>

    <!-- 将RolePermission中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyObj_common" parameterType="com.cimr.sysmanage.model.RolePermission">
        insert into sys_role_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="roleId != null">role_id,</if>
            <if test="permissionId != null">permission_id,</if>
            <if test="updateBy != null">update_by,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="createBy != null"> #{createBy},</if>
            <if test="delFlag != null"> #{delFlag},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="roleId != null"> #{roleId},</if>
            <if test="permissionId != null"> #{permissionId},</if>
            <if test="updateBy != null"> #{updateBy},</if>
        </trim>
    </insert>

    <!-- 将RolePermission批量插入到对应数据库的表中-->
    <insert id="insertObjByBatch_common" parameterType="ArrayList">
        insert into sys_role_permission(id,create_by,del_flag,update_time,create_time,role_id,permission_id,update_by) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.createBy},#{item.delFlag},#{item.updateTime},#{item.createTime},#{item.roleId},#{item.permissionId},#{item.updateBy})
        </foreach>
    </insert>

    <!-- 通过RolePermission的id将数据库表中对应的数据删除-->
    <delete id="deleteObjById_common" parameterType="java.lang.String">
        delete from sys_role_permission
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将RolePermission对应的数据库表的数据删除-->
    <delete id="deleteObj_common" parameterType="com.cimr.util.Assist">
        delete from sys_role_permission
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过RolePermission的id将RolePermission的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateObjById_common" parameterType="com.cimr.sysmanage.model.RolePermission">
        update sys_role_permission set
            create_by=#{createBy}
            ,del_flag=#{delFlag}
            ,update_time=#{updateTime}
            ,create_time=#{createTime}
            ,role_id=#{roleId}
            ,permission_id=#{permissionId}
            ,update_by=#{updateBy}
        where id=#{id}
    </update>

    <!-- 通过RolePermission的id将RolePermission中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyObjById_common" parameterType="com.cimr.sysmanage.model.RolePermission">
        update sys_role_permission
        <set>
            <if test="createBy != null">
                create_by=#{createBy},
            </if>
            <if test="delFlag != null">
                del_flag=#{delFlag},
            </if>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="roleId != null">
                role_id=#{roleId},
            </if>
            <if test="permissionId != null">
                permission_id=#{permissionId},
            </if>
            <if test="updateBy != null">
                update_by=#{updateBy},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将RolePermission中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateObj_common" parameterType="map">
        update sys_role_permission
        <set>
                id=#{enti.id},
                create_by=#{enti.createBy},
                del_flag=#{enti.delFlag},
                update_time=#{enti.updateTime},
                create_time=#{enti.createTime},
                role_id=#{enti.roleId},
                permission_id=#{enti.permissionId},
                update_by=#{enti.updateBy},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将RolePermission中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyObj_common" parameterType="map">
        update sys_role_permission
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.createBy != null">
                create_by=#{enti.createBy},
            </if>
            <if test="enti.delFlag != null">
                del_flag=#{enti.delFlag},
            </if>
            <if test="enti.updateTime != null">
                update_time=#{enti.updateTime},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
            <if test="enti.roleId != null">
                role_id=#{enti.roleId},
            </if>
            <if test="enti.permissionId != null">
                permission_id=#{enti.permissionId},
            </if>
            <if test="enti.updateBy != null">
                update_by=#{enti.updateBy},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>