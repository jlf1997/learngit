<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cimr.sysmanage.dao.RoleDao">
    <!-- Role的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Role_Map" type="com.cimr.sysmanage.model.Role">
        <id column="id" property="id" />
        <result column="role_name" property="roleName" />
        <result column="create_by" property="createBy" />
        <result column="del_flag" property="delFlag" />
        <result column="update_time" property="updateTime" />
        <result column="create_time" property="createTime" />
        <result column="group_id" property="groupId" />
        <result column="role_key" property="roleKey" />
        <result column="comment" property="comment" />
        <result column="update_by" property="updateBy" />
        <result column="order_id" property="orderId" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:sys_role的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="sys_role_Column">
        sys_role.id as id
        ,sys_role.role_name as role_name
        ,sys_role.create_by as create_by
        ,sys_role.del_flag as del_flag
        ,sys_role.update_time as update_time
        ,sys_role.create_time as create_time
        ,sys_role.group_id as group_id
        ,sys_role.role_key as role_key
        ,sys_role.comment as comment
        ,sys_role.update_by as update_by
        ,sys_role.order_id as order_id
    </sql>

    <!--获得类名为:Role对应的数据库表的数据总行数 -->
    <select id="getObjRowCount_common" parameterType="com.cimr.util.Assist" resultType="java.lang.Long">
        select count(id) from sys_role
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Role对应数据库中表的数据集合 -->
    <select id="selectObj_common" parameterType="com.cimr.util.Assist"  resultMap="result_Role_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="sys_role_Column" /> 
            </otherwise>
        </choose>
        from sys_role
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM sys_role
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=sys_role.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个Role对象,以参数Role对象中不为空的属性作为条件进行查询-->
    <select id="selectObjByObj_common" parameterType="com.cimr.sysmanage.model.Role" resultMap="result_Role_Map">
        select 
            <include refid="sys_role_Column" /> 
        from sys_role
        <where>
            <if test="orderId != null "> and sys_role.order_id = #{orderId}</if>
            <if test="updateBy != null "> and sys_role.update_by = #{updateBy}</if>
            <if test="comment != null "> and sys_role.comment = #{comment}</if>
            <if test="roleKey != null "> and sys_role.role_key = #{roleKey}</if>
            <if test="groupId != null "> and sys_role.group_id = #{groupId}</if>
            <if test="createTime != null "> and sys_role.create_time = #{createTime}</if>
            <if test="updateTime != null "> and sys_role.update_time = #{updateTime}</if>
            <if test="delFlag != null "> and sys_role.del_flag = #{delFlag}</if>
            <if test="createBy != null "> and sys_role.create_by = #{createBy}</if>
            <if test="roleName != null "> and sys_role.role_name = #{roleName}</if>
            <if test="id != null "> and sys_role.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Role的id获得对应数据库中表的数据对象-->
    <select id="selectObjById_common" parameterType="java.lang.String" resultMap="result_Role_Map">
        select 
            <include refid="sys_role_Column" /> 
        from sys_role
        where sys_role.id = #{id}
    </select> 

    <!-- 将Role插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertObj_common" parameterType="com.cimr.sysmanage.model.Role">
        insert into sys_role(id,role_name,create_by,del_flag,update_time,create_time,group_id,role_key,comment,update_by,order_id) 
        values(#{id},#{roleName},#{createBy},#{delFlag},#{updateTime},#{createTime},#{groupId},#{roleKey},#{comment},#{updateBy},#{orderId})
    </insert>

    <!-- 将Role中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyObj_common" parameterType="com.cimr.sysmanage.model.Role">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="roleName != null">role_name,</if>
            <if test="createBy != null">create_by,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="groupId != null">group_id,</if>
            <if test="roleKey != null">role_key,</if>
            <if test="comment != null">comment,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="orderId != null">order_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="roleName != null"> #{roleName},</if>
            <if test="createBy != null"> #{createBy},</if>
            <if test="delFlag != null"> #{delFlag},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="groupId != null"> #{groupId},</if>
            <if test="roleKey != null"> #{roleKey},</if>
            <if test="comment != null"> #{comment},</if>
            <if test="updateBy != null"> #{updateBy},</if>
            <if test="orderId != null"> #{orderId},</if>
        </trim>
    </insert>

    <!-- 将Role批量插入到对应数据库的表中-->
    <insert id="insertObjByBatch_common" parameterType="ArrayList">
        insert into sys_role(id,role_name,create_by,del_flag,update_time,create_time,group_id,role_key,comment,update_by,order_id) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.roleName},#{item.createBy},#{item.delFlag},#{item.updateTime},#{item.createTime},#{item.groupId},#{item.roleKey},#{item.comment},#{item.updateBy},#{item.orderId})
        </foreach>
    </insert>

    <!-- 通过Role的id将数据库表中对应的数据删除-->
    <delete id="deleteObjById_common" parameterType="java.lang.String">
        delete from sys_role
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Role对应的数据库表的数据删除-->
    <delete id="deleteObj_common" parameterType="com.cimr.util.Assist">
        delete from sys_role
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Role的id将Role的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateObjById_common" parameterType="com.cimr.sysmanage.model.Role">
        update sys_role set
            role_name=#{roleName}
            ,create_by=#{createBy}
            ,del_flag=#{delFlag}
            ,update_time=#{updateTime}
            ,create_time=#{createTime}
            ,group_id=#{groupId}
            ,role_key=#{roleKey}
            ,comment=#{comment}
            ,update_by=#{updateBy}
            ,order_id=#{orderId}
        where id=#{id}
    </update>

    <!-- 通过Role的id将Role中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyObjById_common" parameterType="com.cimr.sysmanage.model.Role">
        update sys_role
        <set>
            <if test="roleName != null">
                role_name=#{roleName},
            </if>
            <if test="createBy != null">
                create_by=#{createBy},
            </if>
            <if test="delFlag != null">
                del_flag=#{delFlag},
            </if>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="groupId != null">
                group_id=#{groupId},
            </if>
            <if test="roleKey != null">
                role_key=#{roleKey},
            </if>
            <if test="comment != null">
                comment=#{comment},
            </if>
            <if test="updateBy != null">
                update_by=#{updateBy},
            </if>
            <if test="orderId != null">
                order_id=#{orderId},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Role中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateObj_common" parameterType="map">
        update sys_role
        <set>
                id=#{enti.id},
                role_name=#{enti.roleName},
                create_by=#{enti.createBy},
                del_flag=#{enti.delFlag},
                update_time=#{enti.updateTime},
                create_time=#{enti.createTime},
                group_id=#{enti.groupId},
                role_key=#{enti.roleKey},
                comment=#{enti.comment},
                update_by=#{enti.updateBy},
                order_id=#{enti.orderId},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Role中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyObj_common" parameterType="map">
        update sys_role
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.roleName != null">
                role_name=#{enti.roleName},
            </if>
            <if test="enti.createBy != null">
                create_by=#{enti.createBy},
            </if>
            <if test="enti.delFlag != null">
                del_flag=#{enti.delFlag},
            </if>
            <if test="enti.updateTime != null">
                update_time=#{enti.updateTime},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
            <if test="enti.groupId != null">
                group_id=#{enti.groupId},
            </if>
            <if test="enti.roleKey != null">
                role_key=#{enti.roleKey},
            </if>
            <if test="enti.comment != null">
                comment=#{enti.comment},
            </if>
            <if test="enti.updateBy != null">
                update_by=#{enti.updateBy},
            </if>
            <if test="enti.orderId != null">
                order_id=#{enti.orderId},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>
    <select id="selectRoleListByChildGroups" parameterType="com.cimr.sysmanage.model.Role" resultMap="result_Role_Map">
        SELECT U.*,r.group_name FROM sys_role U INNER JOIN sys_group r on U.group_id=r.id
        WHERE
        U.group_id IN(
        select G.id from sys_group G inner join (select getChildLst(#{id}) as idArr) TEMP where FIND_IN_SET(G.id, TEMP.idArr)
        )
        <if test="roleName!='' and roleName!=null">
           and role_name like concat('%',#{roleName},'%')
        </if>
        and U.del_flag=0
    </select>

    <select id="selectRoleListByParentGroups" parameterType="com.cimr.sysmanage.model.Role" resultMap="result_Role_Map">
        SELECT U.* FROM sys_role U
        WHERE
        U.group_id IN(
        select G.id from sys_group G inner join (select getFatherLst(#{id}) as idArr) TEMP where FIND_IN_SET(G.id, TEMP.idArr);
        )
    </select>
    <select id="selectObj_commons" parameterType="com.cimr.util.Assist"  resultMap="result_Role_Map">
    select r.*,g.group_name from sys_role r inner JOIN sys_group g on r.group_id=g.id
        <if test="require!=null"><include refid="Assist" /></if>
        <if test="order !=null">${order}</if>
    </select>

    <select id="selectPage_commons" parameterType="com.cimr.util.Assist"  resultMap="result_Role_Map">
        select r.*,g.group_name from sys_role r inner JOIN sys_group g on r.group_id=g.id
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
</mapper>