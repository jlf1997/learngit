server:
  port: 8888                    # 指定该Eureka实例的端口
node1:
  172.16.20.179
node2:
  172.16.20.177

  
eureka:
  server:
    enable-self-preservation: true
    #启用主动失效，并且每次主动失效检测间隔为3s
    eviction-interval-timer-in-ms: 3000 
    #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
    responseCacheUpdateIntervalMs: 3000 
    #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap
    responseCacheAutoExpirationInSeconds: 180
  instance:
    hostname: localhost         # 指定该Eureka实例的主机名
    #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除 一般为服务刷新时间配置的三倍
    #一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效
    lease-expiration-duration-in-seconds: 15
    #服务刷新时间配置，每隔这个时间会主动心跳一次
    lease-renewal-interval-in-seconds: 5
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://127.0.0.1:8888/eureka/
#172.16.20.115
#172.16.20.97
spring:
  application:
    name: eureka-server


